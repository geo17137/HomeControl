; PlatformIO Project Configuration File
; ESP32_HomeCtrlDisplayA08
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; https://github.com/tzapu/WiFiManager/#install-using-platformio
; [env]
; lib_deps =
; 	https://github.com/tzapu/WiFiManager.git  
; 	lib_deps = lorol/LittleFS_esp32@^1.0.6
; 	lib_deps = fbiego/ESP32Time@^2.0.0
; 	lib_deps = 	knolleary/PubSubClient@^2.8
; 
; [env:esp32dev]
; platform = espressif32
; board = esp32dev
; framework = arduino
; ; upload_port = 192.168.1.137
; ; upload_port = com10
; ; upload_protocol = espota
; ;  upload_port = COM10
; monitor_speed = 115800
; upload_port = COM12
; upload_speed = 921000
; ;921000
; ; upload_protocol = esp-prog
; monitor_port = COM12
; ; debug_tool = esp-prog
; ;debug_init_break = tbreak setup

; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; https://github.com/tzapu/WiFiManager/#install-using-platformio
; check projet:  pio check --skip-packages
; delete flash : pio run --target erase


[platformio]
default_envs = release

[env]
lib_deps =
	https://github.com/tzapu/WiFiManager.git  
	fbiego/ESP32Time@^2.0.0
	knolleary/PubSubClient@^2.8
	esphome/AsyncTCP-esphome @ ^2.0.0
	ottowinter/ESPAsyncWebServer-esphome @ ^3.0.0
	ayushsharma82/WebSerial @ ^1.3.0
	igorantolic/Ai Esp32 Rotary Encoder @ ^1.4
	mathertel/OneButton@^2.0.3
	enjoyneering/LiquidCrystal_I2C@^1.3.3
[common]
platform = espressif32
// platform = https://github.com/platformio/platform-espressif32.git
board = esp32dev
framework = arduino
monitor_speed = 115200
; upload_speed = 921000
; upload_protocol = esp-prog
COM_DEBUG = COM12
; COM_RELEASE = COM6
COM_RELEASE = /dev/cu.usbserial-0001
extra_scripts = replace_fs.py

[env:debug]
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}
build_type = debug
debug_build_flags = -O0 -ggdb3 -g3
monitor_speed = ${common.monitor_speed}
; upload_speed = ${common.upload_speed}
; upload_protocol =  ${common.upload_protocol}
; lib_deps = ${common.lib_deps}
upload_protocol = esp-prog
upload_port = ${common.COM_DEBUG}
monitor_port = ${common.COM_DEBUG}
debug_tool = esp-prog
debug_init_break = tbreak setup

[env:release]
platform = ${common.platform}
board = ${common.board}
framework = ${common.framework}
build_type = release
; build_flags = -v
; build_flags = -Wl,-Map,output.map
monitor_speed = ${common.monitor_speed}
;upload_speed = ${common.upload_speed}
;upload_protocol =  ${common.upload_protocol}
; lib_deps = ${common.lib_deps}
monitor_port = ${common.COM_RELEASE}
; board_build.flash_mode = dout
; upload_protocol = espota
; Carte sur le tableau Ã©lectrique
; upload_port = 192.168.1.135
; Carte avec antenne
; upload_port = 192.168.1.219

